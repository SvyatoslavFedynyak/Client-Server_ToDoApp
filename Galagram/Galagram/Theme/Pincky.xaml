<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--COLORS-->

    <Color x:Key="WhiteColor">#FFFFFF</Color>
    <Color x:Key="BlackColor">#000000</Color>
    <Color x:Key="DarkColor">#FF3F3F3F</Color>
    <Color x:Key="DarkGridColor">#1F2936</Color>
    <Color x:Key="LightGridColor">#333D4A</Color>
    <Color x:Key="WhiteSmokeColor">#F5F5F5</Color>

    <Color x:Key="BlueColor">#5C6BC0</Color>
    <Color x:Key="LightBlueColor">#26C6DA</Color>
    <Color x:Key="BlueHoverColor">#5D71E2</Color>

    <Color x:Key="PinkColor">#EC407A</Color>
    <Color x:Key="DarkRedColor">#B00000</Color>

    <Color x:Key="SilverColor">#F0F0F0</Color>
    <Color x:Key="DarkSilverColor">#8C8C8C</Color>





    <!--BRUSHES-->

    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}"/>
    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}"/>
    <SolidColorBrush x:Key="DarkGridBrush" Color="{StaticResource DarkGridColor}"/>
    <SolidColorBrush x:Key="LightGridBrush" Color="{StaticResource LightGridColor}"/>
    <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource DarkColor}"/>
    <SolidColorBrush x:Key="WhiteSmokeBrush" Color="{StaticResource WhiteSmokeColor}"/>

    <SolidColorBrush x:Key="PinkBrush" Color="{StaticResource PinkColor}"/>
    <SolidColorBrush x:Key="DarkRedBrush" Color="{StaticResource DarkRedColor}"/>

    <SolidColorBrush x:Key="BlueBrush" Color="{StaticResource BlueColor}"/>
    <SolidColorBrush x:Key="BlueHoverBrush" Color="{StaticResource BlueHoverColor}"/>
    <SolidColorBrush x:Key="LightBlueBrush" Color="{StaticResource LightBlueColor}"/>
    <SolidColorBrush x:Key="SilverBrush" Color="{StaticResource SilverColor}"/>
    <SolidColorBrush x:Key="DarkSilverBrush" Color="{StaticResource DarkSilverColor}"/>




    <!--TEMPLATES-->
    <!--LIST BOX FOR IMAGE IN ALBUM-->
    <ControlTemplate x:Key="ListBoxAlbumImageTemplate" TargetType="ListBoxItem">
      <Button Style="{DynamicResource ButtonBase}" Background="Transparent" Command="{Binding OpenPhoto}">
        <Image Source="{Binding Path}" Style="{DynamicResource PhotoImage}"/>
      </Button> 
    </ControlTemplate>
    <!--LIST BOX ITEM FOR SEARCH-->
    <ControlTemplate x:Key="ListItemSearchTemplate" TargetType="ListBoxItem">
        <Grid Background="{TemplateBinding Background}">
            <!--SCALING-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--DATA-->
            <Image Grid.Column="0" Source="{Binding MainPhoto}"
                   Width="50" Height="50"
                   Margin="0"
                   Stretch="Uniform"/>
            <Label Grid.Column="1" Content="{Binding NickName}" Foreground="{TemplateBinding Foreground}"/>
        </Grid>
    </ControlTemplate>
    <!--LIST BOX ITEM FOR FOLLOW-->
    <ControlTemplate x:Key="ListItemFollowTemplate" TargetType="ListBoxItem">
        <Grid Background="{TemplateBinding Background}">
            <!--SCALING-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <!--DATA-->
            <Image Grid.Column="0" Source="{Binding MainPhoto}"
                   Width="50" Height="50"
                   Margin="0"
                   Stretch="Uniform"/>
            <Label Grid.Column="1" Content="{Binding NickName}" Foreground="{TemplateBinding Foreground}"/>

            <Button Grid.Column="2" 
                    Width="30" Height="30" 
                    Style="{DynamicResource ButtonBase}"
                    Background="Transparent"
                    Command="{Binding Unfollow}">
                <Image 
                   Source="/Resources/MenuImg/Exit.png"
                   Width="20" Height="20"
                   Margin="0"/>
            </Button>

        </Grid>
    </ControlTemplate>
    <!--LIST BOX ITEM FOR COMMENTS-->
    <ControlTemplate x:Key="ListItemCommentsTemplate" TargetType="ListBoxItem">
        <Grid 
            Background="{TemplateBinding Background}"
            MinHeight="100">
            <!--SCALING-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--DATA-->
            <Image Grid.Column="0" 
                   Source="{Binding Author.MainPhoto}"
                   Width="50" Height="50"
                   Margin="0"
                   Stretch="Uniform"/>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>

                <!--NICKNAME-->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" 
                       HorizontalContentAlignment="Left"
                       VerticalContentAlignment="Top"
                       Content="{TemplateBinding Content}" 
                       Foreground="{TemplateBinding Foreground}"
                       FontSize="14"/>

                    <!--DELETE-->
                    <Button Grid.Column="2" 
                            Width="30" Height="30" 
                            Style="{DynamicResource ButtonBase}"
                            Background="Transparent"
                            Command="{Binding DeleteComment}">
                        <Image 
                           Source="/Resources/MenuImg/Exit.png"
                           Width="20" Height="20"
                           Margin="0"/>
                    </Button>
                </Grid>

                <!--TEXT-->
                <TextBlock Grid.Row="1" 
                           TextWrapping="WrapWithOverflow"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Text="{Binding Text}"/>
                <!--LIKE DISLIKE DATE-->
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <!--LIKE-->
                    <Button Grid.Column="0" 
                            Width="30" Height="30" 
                            Style="{DynamicResource LikeCommentButton}"
                            Background="Transparent"
                            Command="{Binding LikeDislikeComment}">
                        <Image 
                           Source="/Resources/InterfaceImg/Plus.png"
                           Width="20" Height="20"
                           Margin="2"/>
                    </Button>
                    <Label Grid.Column="1"
                           Style="{DynamicResource CenterLabel}"
                           Content="0"/>
                    <!--DISLIKE-->
                    <Button Grid.Column="2" 
                            Width="30" Height="30" 
                            Style="{DynamicResource DisLikeCommentButton}"
                            Background="Transparent"
                            Command="{Binding LikeDislikeComment}">
                        <Image 
                           Source="/Resources/InterfaceImg/Minus.png"
                           Width="20" Height="20"
                           Margin="2"/>
                    </Button>
                    <Label Grid.Column="3"
                           Style="{DynamicResource CenterLabel}"
                           Content="0"/>
                    <!--DATE-->
                    <Label Grid.Column="4"
                           Style="{DynamicResource CenterLabel}"
                           Content="{Binding Date}"
                           FontSize="8"/>
                </Grid>
            </Grid>


        </Grid>
    </ControlTemplate>
    <!--SCROLL BAR-->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Track
                      Name="PART_Track"
                      Grid.Row="0"
                      IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                      Style="{DynamicResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                      Style="{DynamicResource ScrollBarThumb}"
                      Margin="0"
                      Background="{StaticResource LightBlueBrush}" />

                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                          Style="{DynamicResource ScrollBarPageButton}"
                          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Track
                  Name="PART_Track"
                  Grid.Column="0"
                  IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                      Style="{DynamicResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                          Style="{DynamicResource ScrollBarThumb}"
                          Margin="0"
                          Background="{StaticResource LightBlueBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                      Style="{DynamicResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <!--COMBO BOX-->
    <!--TOGGLE BUTTON-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{StaticResource WhiteSmokeBrush}"
                  BorderThickness="0" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="0" 
                  Background="{StaticResource WhiteSmokeBrush}" 
                  BorderBrush="{StaticResource DarkBrush}"
                  BorderThickness="0, 0, 1, 0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource DarkBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SilverBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--TEXT BOX-->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <!--COMBO BOX-->
    <ControlTemplate TargetType="{x:Type ComboBox}" x:Key="ComboBoxTemplate">
        <Grid>
            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="False"
                            IsChecked="{Binding Path = IsDropDownOpen, Mode = TwoWay, RelativeSource = {RelativeSource TemplatedParent}}"
                            ClickMode="Press">
            </ToggleButton>
            <ContentPresenter 
                            Name="ContentSite" 
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3, 3, 40, 3"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                            Margin="3, 3, 40, 3"
                            Focusable="True" 
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
                                x:Name="DropDownBorder"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource DarkBrush}"/>
                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
            <Trigger Property="IsEditable"  Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--BUTTON-->
    <ControlTemplate TargetType="Button" x:Key="ButtonTemplate">
        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource BlackBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>
    <!--TEXT BOX-->
    <ControlTemplate TargetType="{x:Type TextBoxBase}" x:Key="TextBoxTemplate">
        <Border
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
            <ScrollViewer
                            x:Name="PART_ContentHost" 
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
        </Border>
    </ControlTemplate>







    <!--STYLE-->

    <!--WINDOW-->
    <Style TargetType="Window" x:Key="ModalWindow">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>
    <Style TargetType="Window" x:Key="ModalWindowResizable">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>
    <!--BUTTON-->
    <Style TargetType="Button" x:Key="ButtonBase">
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!--CLICK BUTTON-->
    <Style TargetType="Button" x:Key="ClickButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="FontSize" Value="25"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DarkSilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--LIKE PHOTO BUTTON-->
    <Style TargetType="Button" x:Key="LikePhotoButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DISLIKE PHOTO BUTTON-->
    <Style TargetType="Button" x:Key="DisLikePhotoButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkSilverBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--LIKE COMMENT BUTTON-->
    <Style TargetType="Button" x:Key="LikeCommentButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DISLIKE COMMENT BUTTON-->
    <Style TargetType="Button" x:Key="DisLikeCommentButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkSilverBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--HEADER BUTTON-->
    <Style TargetType="Button" x:Key="HeaderButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource BlueBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TOP BUTTON-->
    <Style TargetType="Button" x:Key="TopButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource DarkGridBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource LightGridBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TOP EXIT BUTTON-->
    <Style TargetType="Button" x:Key="TopExitButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource DarkGridBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkRedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--IMG BUTTON-->
    <Style TargetType="Button" x:Key="ImgButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Margin" Value="5"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource WhiteSmokeBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TEXT BOX-->
    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PinkBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--LABEL-->
    <Style TargetType="Label" x:Key="LabelBase">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>

    </Style>
    <!--CENTER LABEL-->
    <Style TargetType="Label" x:Key="CenterLabel" BasedOn="{StaticResource LabelBase}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="FontSize" Value="25"/>
    </Style>
                <!--CENTER WHITE LABEL-->
    <Style TargetType="Label" x:Key="CenterWhiteLabel" BasedOn="{StaticResource CenterLabel}">
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
    </Style>
    <!--HEADER LABEL-->
    <Style TargetType="Label" x:Key="HeaderLabel" BasedOn="{StaticResource LabelBase}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Padding" Value="10, 0, 0, 0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>
    <!--H1 Label-->
    <Style TargetType="Label" x:Key="H1Label" BasedOn="{StaticResource HeaderLabel}">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!--H1 Left Label-->
    <Style TargetType="Label" x:Key="H1LeftLabel" BasedOn="{StaticResource HeaderLabel}">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!--GRID-->
    <Style TargetType="Grid" x:Key="HeaderGrid">
        <Setter Property="Background" Value="{StaticResource BlueBrush}"/>
    </Style>
    <!--TEXT BLOCK-->
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>
    <!--QUESTION TEXT BOX-->
    <Style TargetType="TextBox" x:Key="QuestionTextBoxStyle">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="SelectionBrush" Value="{StaticResource PinkBrush}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>
    <Style TargetType="Paragraph">
        <Setter Property="Margin" Value="0"/>
    </Style>
    <!--COMBO BOX-->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
        <Setter Property="Background" Value="{StaticResource WhiteSmokeBrush}"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--COMBO BOX ITEM-->
    <Style TargetType="{x:Type ComboBoxItem}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource LightBlueBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--SCROLL BAR-->
    <!--SCROLL BAR PAGE BUTTON-->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <!--SCROLL BAR THUMB-->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="Rectangle"
                        SnapsToDevicePixels="True"
                        Fill="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Rectangle" Property="Fill" Value="{StaticResource BlueHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Rectangle" Property="Fill" Value="{StaticResource BlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--SCROLL BAR-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--LIST BOX BASE-->
    <Style TargetType="ListBoxItem" x:Key="ListBoxItemBase">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SilverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkSilverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--LIST BOX FOR SEARCH-->
    <Style TargetType="ListBox" x:Key="ListBoxSearch">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0, 10, 0, 0"/>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBase}">
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ListItemSearchTemplate}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LIST BOX FOR FOLLOW-->
    <Style TargetType="ListBox" x:Key="ListBoxFollow">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0, 20, 0, 0"/>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBase}">
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ListItemFollowTemplate}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="{StaticResource LightBlueBrush}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--LIST BOX FOR COMMENTS-->
    <Style TargetType="ListBox" x:Key="ListBoxComments">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBase}">
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ListItemCommentsTemplate}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Content" Value="{Binding Author.NickName}"/>
                    <Setter Property="FontSize" Value="12"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--LIST BOX FOR ALBUM-->
    <Style TargetType="ListBox" x:Key="ListBoxAlbum">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ScrollViewer>
                        <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBase}">
                    <Setter Property="Template" Value="{StaticResource ListBoxAlbumImageTemplate}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IMAGE PHOTO-->
    <Style TargetType="Image" x:Key="Photo">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>
    <!--IMAGE PICTURE-->
    <Style TargetType="Image" x:Key="PhotoImage">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Stretch" Value="Uniform"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Width" Value="90"/>
                <Setter Property="Height" Value="90"/>
            </Trigger>
        </Style.Triggers>
    </Style>





    <!--ADMIN PART-->







    <!--COLORS-->

    <Color x:Key="OrangeColor">#E77D31</Color>
    <Color x:Key="LightGrayColor">#EEEAED</Color>
    <Color x:Key="DarkGrayColor">#37424B</Color>
    <Color x:Key="MiddleGrayColor">#ABB3B8</Color>
    <Color x:Key="DarkerGrayColor">#9A9A9A</Color>
    <Color x:Key="LighterGrayColor">#E6E6E6</Color>

    <!--BRUSHES-->
    <SolidColorBrush x:Key="OrangeBrush" Color="{StaticResource OrangeColor}" />
    <SolidColorBrush x:Key="LightGrayColorBrush" Color="{StaticResource LightGrayColor}" />
    <SolidColorBrush x:Key="DarkGrayColorBrush" Color="{StaticResource DarkGrayColor}" />
    <SolidColorBrush x:Key="MiddleGrayColorBrush" Color="{StaticResource MiddleGrayColor}" />
    <SolidColorBrush x:Key="DarkerGrayColorBrush" Color="{StaticResource DarkerGrayColor}" />
    <SolidColorBrush x:Key="LighterGrayColorBrush" Color="{StaticResource LighterGrayColor}" />



    <!--LABEL IN THE LEFT CORNER-->
    <Style TargetType="Label" x:Key="TopLeftLabel">
        <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
    <!--HEADER LABEL ADMIN-->
    <Style TargetType="Label" x:Key="HeaderLabelAdmin">
        <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="15, 0, 0, 0"/>
    </Style>

    <!--BUTTON-->
    <Style TargetType="Button" x:Key="AdminButton">
        <Setter Property="Background" Value="{StaticResource DarkGrayColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource MiddleGrayColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="45"/>
        <Setter Property="Template" Value="{DynamicResource ButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DarkerGrayColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource LighterGrayColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ADMIN WHITE LABEL-->
    <Style TargetType="Label" x:Key="AdminWhiteLabel" BasedOn="{StaticResource CenterWhiteLabel}">
        <Setter Property="FontSize" Value="12"/>        
    </Style>



</ResourceDictionary>
